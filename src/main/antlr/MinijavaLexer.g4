lexer grammar MinijavaLexer;
CLASS : 'class';
PUBLIC : 'public';
STATIC : 'static';
VOID : 'void';
MAIN : 'main';
STRING : 'String';
INTARR: 'int' LBRACK RBRACK;
INT: 'int';
BOOL: 'boolean';
EXTENDS: 'extends';
LBRACE: '{';
RBRACE: '}';
LPAREN: '(';
RPAREN: ')';
LBRACK: '[';
RBRACK: ']';
RETURN: 'return';
IF: 'if';
ELSE: 'else';
WHILE: 'while';
PRINTLN: 'System.out.println';
SEMIC: ';';
ASSIGN: '=';
OP: '&&' | '<' | '*' ;
PM: '+' | '-';
LENGTH: 'length';
//LAND: '&&';
//LESS: '<';
//PLUS: '+';
//MINUS: '-';
//TIMES: '*';
DOT: '.';
COMMA: ',';
INTLIT: [0-9]+;
TRUE: 'true';
FALSE: 'false';
THIS: 'this';
NEW: 'new';
NEG: '!';
ARROW: '->';
LAMBDA: 'lambda';
IDENT: [a-zA-Z][a-zA-Z_0-9]*;
WS: [ \t\r\n\u000C]+ -> channel(HIDDEN);
LINE_COMMENT: '//' ~[\r\n]* -> channel(HIDDEN);
COMMENT: '/*' .*? '*/' -> channel(HIDDEN);
